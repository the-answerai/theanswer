{
    "dependencies": {
        "@ffmpeg-installer/ffmpeg": "^1.1.0",
        "@mdxeditor/editor": "^3.20.0",
        "@supabase/supabase-js": "^2.47.12",
        "cors": "^2.8.5",
        "cron-parser": "^4.9.0",
        "csv-parse": "^5.6.0",
        "csv-parser": "^3.1.0",
        "csv-stringify": "^6.5.2",
        "csv-writer": "^1.6.0",
        "dotenv": "^16.3.1",
        "express": "^4.18.2",
        "express-oauth2-jwt-bearer": "^1.6.0",
        "express-openid-connect": "^2.17.1",
        "fluent-ffmpeg": "^2.1.3",
        "formdata-node": "^6.0.3",
        "fs-extra": "^11.2.0",
        "groq-sdk": "^0.15.0",
        "jsdom": "^26.0.0",
        "moment-timezone": "^0.5.47",
        "multer": "1.4.5-lts.1",
        "node-fetch": "^3.3.2",
        "openai": "^4.0.0",
        "pg": "^8.13.1",
        "playwright": "^1.50.1",
        "react-tagcloud": "^2.3.3",
        "sharp": "^0.33.5",
        "twilio": "^4.23.0",
        "uuid": "^11.0.5",
        "ws": "^8.18.0"
    },
    "description": "Process and analyze data with AI for intelligent insights",
    "devDependencies": {
        "@faker-js/faker": "^9.6.0",
        "concurrently": "^8.2.2",
        "cross-env": "^7.0.3",
        "ngrok": "5.0.0-beta.2",
        "nodemon": "^3.0.2",
        "serve": "^14.2.1"
    },
    "main": "src/server.js",
    "name": "data-sidekick",
    "scripts": {
        "install-server": "pnpm install",
        "install-client": "cd client && pnpm install",
        "build-client": "cd client && pnpm run build",
        "build": "pnpm run install-server && pnpm run install-client && pnpm run build-client",
        "build:render": "./build-render.sh",
        "update-client-lock": "node update-client-lock.js",
        "client": "cd client && pnpm run dev",
        "server": "nodemon src/server.js",
        "dev": "echo '\nüöÄ Starting in LOCAL mode' && SUPABASE_PORTS=$(supabase status | grep -E 'API URL:|Studio URL:' | awk '{print $3}' | tr '\\n' ' ') && echo \"üì± Frontend: http://localhost:5173\nüóÑÔ∏è Supabase Studio: $(echo $SUPABASE_PORTS | cut -d' ' -f2)\nüîå Supabase API: $(echo $SUPABASE_PORTS | cut -d' ' -f1)\n\" && cross-env NODE_ENV=local concurrently \"cross-env NODE_ENV=local nodemon src/server.js\" \"cd client && cross-env NODE_ENV=local pnpm run dev\"",
        "dev:prime": "echo '\nüöÄ Starting in PRIME mode\nüì± Frontend: http://localhost:5173\nüóÑÔ∏è Supabase Studio: https://app.supabase.com/project/hdldniumfmkpemwyojzl\n' && cross-env NODE_ENV=prime concurrently \"cross-env NODE_ENV=prime nodemon src/server.js\" \"cd client && cross-env NODE_ENV=prime pnpm run dev\"",
        "dev:wow": "echo '\nüöÄ Starting in WOW mode\nüì± Frontend: http://localhost:5173\nüóÑÔ∏è Supabase Studio: https://app.supabase.com/project/phzxpcpytanudjiwxkrv\n' && cross-env NODE_ENV=wow concurrently \"cross-env NODE_ENV=wow nodemon src/server.js\" \"cd client && cross-env NODE_ENV=wow pnpm run dev\"",
        "dev:rds": "echo '\nüöÄ Starting in RDS mode\nüì± Frontend: http://localhost:5173\nüóÑÔ∏è Supabase Studio: https://app.supabase.com/project/qwmxgsznahkjsddgdrwt\n' && cross-env NODE_ENV=rds concurrently \"cross-env NODE_ENV=rds nodemon src/server.js\" \"cd client && cross-env NODE_ENV=rds pnpm run dev\"",
        "dev:lastrev": "echo '\nüöÄ Starting in LASTREV mode\nüì± Frontend: http://localhost:5173\nüóÑÔ∏è Supabase Studio: https://app.supabase.com/project/vfpnofkfbaxofisqenwd\n' && cross-env NODE_ENV=lastrev concurrently \"cross-env NODE_ENV=lastrev nodemon src/server.js\" \"cd client && cross-env NODE_ENV=lastrev pnpm run dev\"",
        "start:prime": "cross-env NODE_ENV=prime node src/server.js",
        "start:wow": "cross-env NODE_ENV=wow node src/server.js",
        "start:rds": "cross-env NODE_ENV=rds node src/server.js",
        "supabase:start": "supabase start",
        "supabase:stop": "supabase stop",
        "supabase:reset": "supabase db reset",
        "db:local:setup": "supabase start && supabase db reset",
        "db:rds:migrate": "node scripts/db/apply-migrations-to-rds.js",
        "db:rds:extract-migrations": "node scripts/db/extract-migrations.js",
        "db:rds:setup": "npm run db:rds:migrate && npm run sync:local-to-rds",
        "db:rds:migrate-cli": "node scripts/db/migrate-rds.js",
        "db:rds:setup-cli": "node scripts/db/migrate-rds.js && npm run sync:local-to-rds",
        "sync:prime": "node scripts/db/sync-prod-data.js prime",
        "sync:wow": "node scripts/db/sync-prod-data.js wow",
        "sync:rds": "node scripts/db/sync-prod-data.js rds",
        "sync:local-to-rds": "node scripts/db/sync-local-to-rds.js",
        "sync:all-local-to-rds": "node scripts/db/sync-all-local-to-rds.js",
        "sync": "echo '\n‚ö†Ô∏è  Please use either \"pnpm sync:prime\", \"pnpm sync:wow\", or \"pnpm sync:rds\" to specify which environment to sync from'",
        "generate:tickets": "node scripts/generate_test_tickets.js",
        "test:answerai": "node src/scripts/test-answerai-connection.js",
        "test:answerai:local": "cross-env NODE_ENV=local node src/scripts/test-answerai-connection.js",
        "test:answerai:prime": "cross-env NODE_ENV=prime node src/scripts/test-answerai-connection.js",
        "test:answerai:wow": "cross-env NODE_ENV=wow node src/scripts/test-answerai-connection.js",
        "test:answerai:rds": "cross-env NODE_ENV=rds node src/scripts/test-answerai-connection.js",
        "diagnose:answerai": "node src/scripts/diagnose-answerai.js",
        "diagnose:answerai:local": "cross-env NODE_ENV=local node src/scripts/diagnose-answerai.js",
        "diagnose:answerai:prime": "cross-env NODE_ENV=prime node src/scripts/diagnose-answerai.js",
        "diagnose:answerai:wow": "cross-env NODE_ENV=wow node src/scripts/diagnose-answerai.js",
        "diagnose:answerai:rds": "cross-env NODE_ENV=rds node src/scripts/diagnose-answerai.js",
        "unstructured:start": "docker-compose -f docker-compose.unstructured.yml up -d",
        "unstructured:stop": "docker-compose -f docker-compose.unstructured.yml down",
        "unstructured:status": "docker ps | grep unstructured-api || echo 'Unstructured container is not running'",
        "test:unstructured": "node src/scripts/test-unstructured.js",
        "test:unstructured:local": "cross-env NODE_ENV=local node src/scripts/test-unstructured.js",
        "test:unstructured:prime": "cross-env NODE_ENV=prime node src/scripts/test-unstructured.js",
        "test:unstructured:wow": "cross-env NODE_ENV=wow node src/scripts/test-unstructured.js",
        "test:unstructured:rds": "cross-env NODE_ENV=rds node src/scripts/test-unstructured.js",
        "start": "cross-env NODE_ENV=production node src/server.js"
    },
    "type": "module",
    "version": "1.0.0"
}
