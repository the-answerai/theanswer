{
    "id": "1ca08600-3593-4128-9786-bef6cb3c5cb8",
    "name": "SK - Chief Sidekick Chatflow",
    "description": "",
    "flowData": "{\"nodes\": [{\"id\": \"toolAgent_0\", \"position\": {\"x\": 1015.068806949258, \"y\": 211.01719472204417}, \"type\": \"customNode\", \"data\": {\"id\": \"toolAgent_0\", \"label\": \"Tool Agent\", \"version\": 2, \"name\": \"toolAgent\", \"type\": \"AgentExecutor\", \"baseClasses\": [\"AgentExecutor\", \"BaseChain\", \"Runnable\"], \"category\": \"Agents\", \"description\": \"Agent that uses Function Calling to pick the tools and args to call\", \"inputParams\": [{\"label\": \"System Message\", \"name\": \"systemMessage\", \"type\": \"string\", \"default\": \"You are a helpful AI assistant.\", \"description\": \"If Chat Prompt Template is provided, this will be ignored\", \"rows\": 4, \"optional\": true, \"additionalParams\": true, \"id\": \"toolAgent_0-input-systemMessage-string\"}, {\"label\": \"Max Iterations\", \"name\": \"maxIterations\", \"type\": \"number\", \"optional\": true, \"additionalParams\": true, \"id\": \"toolAgent_0-input-maxIterations-number\"}, {\"label\": \"Enable Detailed Streaming\", \"name\": \"enableDetailedStreaming\", \"type\": \"boolean\", \"default\": false, \"description\": \"Stream detailed intermediate steps during agent execution\", \"optional\": true, \"additionalParams\": true, \"id\": \"toolAgent_0-input-enableDetailedStreaming-boolean\"}], \"inputAnchors\": [{\"label\": \"Tools\", \"name\": \"tools\", \"type\": \"Tool\", \"list\": true, \"id\": \"toolAgent_0-input-tools-Tool\"}, {\"label\": \"Memory\", \"name\": \"memory\", \"type\": \"BaseChatMemory\", \"id\": \"toolAgent_0-input-memory-BaseChatMemory\"}, {\"label\": \"Tool Calling Chat Model\", \"name\": \"model\", \"type\": \"BaseChatModel\", \"description\": \"Only compatible with models that are capable of function calling: ChatOpenAI, ChatMistral, ChatAnthropic, ChatGoogleGenerativeAI, ChatVertexAI, GroqChat\", \"id\": \"toolAgent_0-input-model-BaseChatModel\"}, {\"label\": \"Chat Prompt Template\", \"name\": \"chatPromptTemplate\", \"type\": \"ChatPromptTemplate\", \"description\": \"Override existing prompt with Chat Prompt Template. Human Message must includes {input} variable\", \"optional\": true, \"id\": \"toolAgent_0-input-chatPromptTemplate-ChatPromptTemplate\"}, {\"label\": \"Input Moderation\", \"description\": \"Detect text that could generate harmful output and prevent it from being sent to the language model\", \"name\": \"inputModeration\", \"type\": \"Moderation\", \"optional\": true, \"list\": true, \"id\": \"toolAgent_0-input-inputModeration-Moderation\"}], \"inputs\": {\"tools\": [\"{{slackMCP_0.data.instance}}\", \"{{confluenceMCP_0.data.instance}}\", \"{{contentfulMCP_0.data.instance}}\", \"{{currentDateTime_0.data.instance}}\", \"{{calculator_0.data.instance}}\", \"{{jiraMCP_0.data.instance}}\", \"{{dallePost_0.data.instance}}\", \"{{currentDateTime_0.data.instance}}\", \"{{githubMCP_0.data.instance}}\", \"{{exaSearch_0.data.instance}}\"], \"memory\": \"{{AAIChatMemory_0.data.instance}}\", \"model\": \"{{chatOpenAI_0.data.instance}}\", \"chatPromptTemplate\": \"{{chatPromptTemplate_0.data.instance}}\", \"systemMessage\": \"You are a helpful AI assistant.\", \"inputModeration\": \"\", \"maxIterations\": \"\", \"enableDetailedStreaming\": \"\"}, \"outputAnchors\": [{\"id\": \"toolAgent_0-output-toolAgent-AgentExecutor|BaseChain|Runnable\", \"name\": \"toolAgent\", \"label\": \"AgentExecutor\", \"description\": \"Agent that uses Function Calling to pick the tools and args to call\", \"type\": \"AgentExecutor | BaseChain | Runnable\"}], \"outputs\": {}, \"selected\": false}, \"width\": 300, \"height\": 492, \"positionAbsolute\": {\"x\": 1015.068806949258, \"y\": 211.01719472204417}, \"selected\": false, \"dragging\": false}, {\"id\": \"chatOpenAI_0\", \"position\": {\"x\": 369.0138347752882, \"y\": 216.36883361560672}, \"type\": \"customNode\", \"data\": {\"loadMethods\": {}, \"label\": \"ChatOpenAI\", \"name\": \"chatOpenAI\", \"version\": 8.2, \"type\": \"ChatOpenAI\", \"icon\": \"/app/packages/server/node_modules/flowise-components/dist/nodes/chatmodels/ChatOpenAI/openai.svg\", \"category\": \"Chat Models\", \"description\": \"Wrapper around OpenAI large language models that use the Chat endpoint\", \"baseClasses\": [\"ChatOpenAI\", \"BaseChatModel\", \"BaseLanguageModel\", \"Runnable\"], \"tags\": [\"AAI\"], \"inputs\": {\"cache\": \"\", \"modelName\": \"gpt-4.1-nano\", \"temperature\": 0.9, \"streaming\": true, \"maxTokens\": \"\", \"topP\": \"\", \"frequencyPenalty\": \"\", \"presencePenalty\": \"\", \"timeout\": \"\", \"strictToolCalling\": \"\", \"stopSequence\": \"\", \"basepath\": \"\", \"proxyUrl\": \"\", \"baseOptions\": \"\", \"allowImageUploads\": \"\", \"imageResolution\": \"low\", \"reasoningEffort\": \"medium\"}, \"filePath\": \"/app/packages/server/node_modules/flowise-components/dist/nodes/chatmodels/ChatOpenAI/ChatOpenAI.js\", \"inputAnchors\": [{\"label\": \"Cache\", \"name\": \"cache\", \"type\": \"BaseCache\", \"optional\": true, \"id\": \"chatOpenAI_0-input-cache-BaseCache\", \"display\": true}], \"inputParams\": [{\"label\": \"Connect Credential\", \"name\": \"credential\", \"type\": \"credential\", \"credentialNames\": [\"openAIApi\"], \"id\": \"chatOpenAI_0-input-credential-credential\", \"display\": true}, {\"label\": \"Model Name\", \"name\": \"modelName\", \"type\": \"asyncOptions\", \"loadMethod\": \"listModels\", \"default\": \"gpt-4o-mini\", \"id\": \"chatOpenAI_0-input-modelName-asyncOptions\", \"display\": true}, {\"label\": \"Temperature\", \"name\": \"temperature\", \"type\": \"number\", \"step\": 0.1, \"default\": 0.9, \"optional\": true, \"id\": \"chatOpenAI_0-input-temperature-number\", \"display\": true}, {\"label\": \"Streaming\", \"name\": \"streaming\", \"type\": \"boolean\", \"default\": true, \"optional\": true, \"additionalParams\": true, \"id\": \"chatOpenAI_0-input-streaming-boolean\", \"display\": true}, {\"label\": \"Max Tokens\", \"name\": \"maxTokens\", \"type\": \"number\", \"step\": 1, \"optional\": true, \"additionalParams\": true, \"id\": \"chatOpenAI_0-input-maxTokens-number\", \"display\": true}, {\"label\": \"Top Probability\", \"name\": \"topP\", \"type\": \"number\", \"step\": 0.1, \"optional\": true, \"additionalParams\": true, \"id\": \"chatOpenAI_0-input-topP-number\", \"display\": true}, {\"label\": \"Frequency Penalty\", \"name\": \"frequencyPenalty\", \"type\": \"number\", \"step\": 0.1, \"optional\": true, \"additionalParams\": true, \"id\": \"chatOpenAI_0-input-frequencyPenalty-number\", \"display\": true}, {\"label\": \"Presence Penalty\", \"name\": \"presencePenalty\", \"type\": \"number\", \"step\": 0.1, \"optional\": true, \"additionalParams\": true, \"id\": \"chatOpenAI_0-input-presencePenalty-number\", \"display\": true}, {\"label\": \"Timeout\", \"name\": \"timeout\", \"type\": \"number\", \"step\": 1, \"optional\": true, \"additionalParams\": true, \"id\": \"chatOpenAI_0-input-timeout-number\", \"display\": true}, {\"label\": \"Strict Tool Calling\", \"name\": \"strictToolCalling\", \"type\": \"boolean\", \"description\": \"Whether the model supports the `strict` argument when passing in tools. If not specified, the `strict` argument will not be passed to OpenAI.\", \"optional\": true, \"additionalParams\": true, \"id\": \"chatOpenAI_0-input-strictToolCalling-boolean\", \"display\": true}, {\"label\": \"Stop Sequence\", \"name\": \"stopSequence\", \"type\": \"string\", \"rows\": 4, \"optional\": true, \"description\": \"List of stop words to use when generating. Use comma to separate multiple stop words.\", \"additionalParams\": true, \"id\": \"chatOpenAI_0-input-stopSequence-string\", \"display\": true}, {\"label\": \"BasePath\", \"name\": \"basepath\", \"type\": \"string\", \"optional\": true, \"additionalParams\": true, \"id\": \"chatOpenAI_0-input-basepath-string\", \"display\": true}, {\"label\": \"Proxy Url\", \"name\": \"proxyUrl\", \"type\": \"string\", \"optional\": true, \"additionalParams\": true, \"id\": \"chatOpenAI_0-input-proxyUrl-string\", \"display\": true}, {\"label\": \"BaseOptions\", \"name\": \"baseOptions\", \"type\": \"json\", \"optional\": true, \"additionalParams\": true, \"id\": \"chatOpenAI_0-input-baseOptions-json\", \"display\": true}, {\"label\": \"Allow Image Uploads\", \"name\": \"allowImageUploads\", \"type\": \"boolean\", \"description\": \"Allow image input. Refer to the <a href=\\\"https://docs.flowiseai.com/using-flowise/uploads#image\\\" target=\\\"_blank\\\">docs</a> for more details.\", \"default\": false, \"optional\": true, \"id\": \"chatOpenAI_0-input-allowImageUploads-boolean\", \"display\": true}, {\"label\": \"Image Resolution\", \"description\": \"This parameter controls the resolution in which the model views the image.\", \"name\": \"imageResolution\", \"type\": \"options\", \"options\": [{\"label\": \"Low\", \"name\": \"low\"}, {\"label\": \"High\", \"name\": \"high\"}, {\"label\": \"Auto\", \"name\": \"auto\"}], \"default\": \"low\", \"optional\": false, \"show\": {\"allowImageUploads\": true}, \"id\": \"chatOpenAI_0-input-imageResolution-options\", \"display\": false}, {\"label\": \"Reasoning Effort\", \"description\": \"Constrains effort on reasoning for reasoning models. Only applicable for o1 and o3 models.\", \"name\": \"reasoningEffort\", \"type\": \"options\", \"options\": [{\"label\": \"Low\", \"name\": \"low\"}, {\"label\": \"Medium\", \"name\": \"medium\"}, {\"label\": \"High\", \"name\": \"high\"}], \"default\": \"medium\", \"optional\": false, \"additionalParams\": true, \"id\": \"chatOpenAI_0-input-reasoningEffort-options\", \"display\": true}], \"outputs\": {}, \"outputAnchors\": [{\"id\": \"chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable\", \"name\": \"chatOpenAI\", \"label\": \"ChatOpenAI\", \"description\": \"Wrapper around OpenAI large language models that use the Chat endpoint\", \"type\": \"ChatOpenAI | BaseChatModel | BaseLanguageModel | Runnable\"}], \"id\": \"chatOpenAI_0\", \"selected\": false}, \"width\": 300, \"height\": 676, \"selected\": false, \"positionAbsolute\": {\"x\": 369.0138347752882, \"y\": 216.36883361560672}, \"dragging\": false}, {\"id\": \"chatPromptTemplate_0\", \"position\": {\"x\": 693.1881117271712, \"y\": 199.50491141654618}, \"type\": \"customNode\", \"data\": {\"id\": \"chatPromptTemplate_0\", \"label\": \"Chat Prompt Template\", \"version\": 2, \"name\": \"chatPromptTemplate\", \"type\": \"ChatPromptTemplate\", \"baseClasses\": [\"ChatPromptTemplate\", \"BaseChatPromptTemplate\", \"BasePromptTemplate\", \"Runnable\"], \"category\": \"Prompts\", \"description\": \"Schema to represent a chat prompt\", \"inputParams\": [{\"label\": \"System Message\", \"name\": \"systemMessagePrompt\", \"type\": \"string\", \"rows\": 4, \"placeholder\": \"You are a helpful assistant that translates {input_language} to {output_language}.\", \"id\": \"chatPromptTemplate_0-input-systemMessagePrompt-string\"}, {\"label\": \"Human Message\", \"name\": \"humanMessagePrompt\", \"description\": \"This prompt will be added at the end of the messages as human message\", \"type\": \"string\", \"rows\": 4, \"placeholder\": \"{text}\", \"id\": \"chatPromptTemplate_0-input-humanMessagePrompt-string\"}, {\"label\": \"Format Prompt Values\", \"name\": \"promptValues\", \"type\": \"json\", \"optional\": true, \"acceptVariable\": true, \"list\": true, \"id\": \"chatPromptTemplate_0-input-promptValues-json\"}, {\"label\": \"Messages History\", \"name\": \"messageHistory\", \"description\": \"Add messages after System Message. This is useful when you want to provide few shot examples\", \"type\": \"tabs\", \"tabIdentifier\": \"selectedMessagesTab\", \"additionalParams\": true, \"default\": \"messageHistoryCode\", \"tabs\": [{\"label\": \"Add Messages (Code)\", \"name\": \"messageHistoryCode\", \"type\": \"code\", \"hideCodeExecute\": true, \"codeExample\": \"const { AIMessage, HumanMessage, ToolMessage } = require('@langchain/core/messages');\\n\\nreturn [\\n    new HumanMessage(\\\"What is 333382 \\ud83e\\udd9c 1932?\\\"),\\n    new AIMessage({\\n        content: \\\"\\\",\\n        tool_calls: [\\n        {\\n            id: \\\"12345\\\",\\n            name: \\\"calulator\\\",\\n            args: {\\n                number1: 333382,\\n                number2: 1932,\\n                operation: \\\"divide\\\",\\n            },\\n        },\\n        ],\\n    }),\\n    new ToolMessage({\\n        tool_call_id: \\\"12345\\\",\\n        content: \\\"The answer is 172.558.\\\",\\n    }),\\n    new AIMessage(\\\"The answer is 172.558.\\\"),\\n]\", \"optional\": true, \"additionalParams\": true}], \"id\": \"chatPromptTemplate_0-input-messageHistory-tabs\"}], \"inputAnchors\": [], \"inputs\": {\"systemMessagePrompt\": \"You are Chief Sidekick, an autonomous multi-tool agent for the AnswerAgent platform.\\n\\n\\u2e3b\\n\\n1 \\u00b7  Available Tools\\n\\n(copy exactly the Tool ID string for tool_calls[i].name \\u2013 the regex ^[a-zA-Z0-9_-]+$ must pass)\\n\\nDomain\\tTool ID (copy-exactly)\\tCore Actions\\nTime\\tCurrentDateTime\\treturn ISO timestamp\\nMath\\tCalculator\\tbasic arithmetic\\nWeb\\texaSearch\\tExa web search\\nConfluence\\tget_comments, get_page, search_pages, get_spaces\\t\\nJira\\tget_epic_children, get_issue, search_issues\\t\\nSlack\\tslack_list_channels, slack_post_message, slack_reply_to_thread, slack_add_reaction, slack_get_channel_history, slack_get_thread_replies, slack_get_users, slack_get_user_profile\\t\\nContentful\\tlist_content_types, get_content_type, get_editor_interface, search_entries, get_entry\\t\\nGitHub\\tcreate_or_update_file, push_files, get_file_contents, create_branch, list_commits, search_code, search_repositories, search_users, create_repository, fork_repository, create_pull_request, get_pull_request, list_pull_requests, create_pull_request_review, merge_pull_request, update_pull_request_branch, get_pull_request_files, get_pull_request_status, get_pull_request_comments, get_pull_request_reviews, create_issue, list_issues, update_issue, add_issue_comment\\t\\nImages\\tgenerate_image (DALL\\u00b7E)\\t\\n\\nRule: the exact string in the Tool ID column is the only legal name for the corresponding function call.\\n\\n\\u2e3b\\n\\n2 \\u00b7  Thinking & Acting Loop (\\u201cPlan \\u2192 Act \\u2192 Answer\\u201d)\\n\\t1.\\tPlan quietly\\n\\t\\u2022\\trestate the user goal in one sentence;\\n\\t\\u2022\\tchoose the minimal set of tools;\\n\\t\\u2022\\tdraft each payload.\\n\\t2.\\tAct by calling a tool.\\n\\t\\u2022\\tif more data needed, loop Plan \\u2192 Act again.\\n\\t3.\\tAnswer once the goal is met.\\n\\t\\u2022\\texpose only the final answer (never your private thoughts or raw JSON).\\n\\n\\u2e3b\\n\\n3 \\u00b7  Clarifying Questions\\n\\nAsk the user only when essential details (repo name, Slack channel, etc.) are missing and no safe default exists.\\n\\n\\u2e3b\\n\\n4 \\u00b7  Tool-specific Critical Rules\\n\\t\\u2022\\tPostgreSQL (inside GitHub actions) \\u2013 always prefix tables public.<table>.\\n\\t\\u2022\\tGitHub \\u2013 create branches, never force-push; head = feature branch, base = main.\\n\\t\\u2022\\tContentful \\u2013 fetch the content-type schema before sending fields; asset flow = upload \\u2192 publish \\u2192 link \\u2192 publish entry.\\n\\t\\u2022\\tConfluence \\u2013 prefer CQL filters (space, label) if a plain text search fails.\\n\\t\\u2022\\tJira \\u2013 verify required fields and retrieve transitionId with get_transitions before state changes.\\n\\t\\u2022\\tSlack \\u2013 if user supplies \\u201c#channel\\u201d, resolve ID via slack_list_channels; reaction is plain emoji name (no colons).\\n\\t\\u2022\\tExaSearch \\u2013 cite or link results when used.\\n\\t\\u2022\\tImages \\u2013 include a short alt-text caption with any generate_image response.\\n\\n\\u2e3b\\n\\n5 \\u00b7  Error Handling\\n\\t\\u2022\\tOn 4xx/5xx or schema error \\u2192 revise payload & retry once.\\n\\t\\u2022\\tIf still failing \\u2192 return the error message and suggest next steps.\\n\\n\\u2e3b\\n\\n6 \\u00b7  Privacy & Safety\\n\\t\\u2022\\tNever reveal API keys or private repo names unless the user provided them.\\n\\t\\u2022\\tConfirm destructive actions (DROP table, delete repo, etc.) with the user.\\n\\t\\u2022\\tRefuse or safe-complete any request that violates policy or law.\\n\\n\\u2e3b\\n\\nFollow this template strictly.\\nAlways copy the exact Tool ID string into tool_calls[i].name.\\nKeep responses concise and actionable.\", \"humanMessagePrompt\": \"The user is on URL: {url}\\nUser Input: {input}\", \"promptValues\": \"{\\\"url\\\":\\\"The User is not on a URL inside of Slack\\\",\\\"input\\\":\\\"{{question}}\\\"}\", \"messageHistory\": \"messageHistoryCode\"}, \"outputAnchors\": [{\"id\": \"chatPromptTemplate_0-output-chatPromptTemplate-ChatPromptTemplate|BaseChatPromptTemplate|BasePromptTemplate|Runnable\", \"name\": \"chatPromptTemplate\", \"label\": \"ChatPromptTemplate\", \"description\": \"Schema to represent a chat prompt\", \"type\": \"ChatPromptTemplate | BaseChatPromptTemplate | BasePromptTemplate | Runnable\"}], \"outputs\": {}, \"selected\": false}, \"width\": 300, \"height\": 748, \"selected\": false, \"positionAbsolute\": {\"x\": 693.1881117271712, \"y\": 199.50491141654618}, \"dragging\": false}, {\"id\": \"AAIChatMemory_0\", \"position\": {\"x\": 1017.2481410221046, \"y\": 708.33850484172}, \"type\": \"customNode\", \"data\": {\"id\": \"AAIChatMemory_0\", \"label\": \"Answer Agent Chat Memory\", \"version\": 1, \"name\": \"AAIChatMemory\", \"type\": \"AAIChatMemory\", \"baseClasses\": [\"AAIChatMemory\", \"BaseChatMemory\", \"BaseMemory\"], \"category\": \"Memory\", \"description\": \"Summarizes the conversation and stores the memory in Answer Agents servers\", \"inputParams\": [{\"label\": \"Session Id\", \"name\": \"sessionId\", \"type\": \"string\", \"description\": \"If not specified, a random id will be used. Learn <a target=\\\"_blank\\\" href=\\\"https://docs.flowiseai.com/memory/long-term-memory#ui-and-embedded-chat\\\">more</a>\", \"default\": \"\", \"additionalParams\": true, \"optional\": true, \"id\": \"AAIChatMemory_0-input-sessionId-string\"}, {\"label\": \"Session Timeouts\", \"name\": \"sessionTTL\", \"type\": \"number\", \"description\": \"Seconds till a session expires. If not specified, the session will never expire.\", \"additionalParams\": true, \"optional\": true, \"id\": \"AAIChatMemory_0-input-sessionTTL-number\"}, {\"label\": \"Memory Key\", \"name\": \"memoryKey\", \"type\": \"string\", \"default\": \"chat_history\", \"additionalParams\": true, \"id\": \"AAIChatMemory_0-input-memoryKey-string\"}, {\"label\": \"Window Size\", \"name\": \"windowSize\", \"type\": \"number\", \"description\": \"Window of size k to surface the last k back-and-forth to use as memory.\", \"additionalParams\": true, \"optional\": true, \"id\": \"AAIChatMemory_0-input-windowSize-number\"}], \"inputAnchors\": [], \"inputs\": {\"sessionId\": \"\", \"sessionTTL\": \"\", \"memoryKey\": \"chat_history\", \"windowSize\": \"\"}, \"outputAnchors\": [{\"id\": \"AAIChatMemory_0-output-AAIChatMemory-AAIChatMemory|BaseChatMemory|BaseMemory\", \"name\": \"AAIChatMemory\", \"label\": \"AAIChatMemory\", \"description\": \"Summarizes the conversation and stores the memory in Answer Agents servers\", \"type\": \"AAIChatMemory | BaseChatMemory | BaseMemory\"}], \"outputs\": {}, \"selected\": false}, \"width\": 300, \"height\": 259, \"selected\": false, \"positionAbsolute\": {\"x\": 1017.2481410221046, \"y\": 708.33850484172}, \"dragging\": false}, {\"id\": \"slackMCP_0\", \"position\": {\"x\": 787.0923211007045, \"y\": -546.2111333307942}, \"type\": \"customNode\", \"data\": {\"id\": \"slackMCP_0\", \"label\": \"Slack MCP\", \"version\": 1, \"name\": \"slackMCP\", \"type\": \"Slack MCP Tool\", \"baseClasses\": [\"Tool\"], \"category\": \"Tools (MCP)\", \"description\": \"MCP Server for the Slack API\", \"inputParams\": [{\"label\": \"Connect Credential\", \"name\": \"credential\", \"type\": \"credential\", \"credentialNames\": [\"slackApi\"], \"id\": \"slackMCP_0-input-credential-credential\"}, {\"label\": \"Available Actions\", \"name\": \"mcpActions\", \"type\": \"asyncMultiOptions\", \"loadMethod\": \"listActions\", \"refresh\": true, \"id\": \"slackMCP_0-input-mcpActions-asyncMultiOptions\"}], \"inputAnchors\": [], \"inputs\": {\"mcpActions\": \"[\\\"slack_get_channel_history\\\",\\\"slack_get_thread_replies\\\",\\\"slack_get_user_profile\\\",\\\"slack_get_users\\\",\\\"slack_list_channels\\\",\\\"slack_post_message\\\",\\\"slack_reply_to_thread\\\",\\\"slack_add_reaction\\\"]\"}, \"outputAnchors\": [{\"id\": \"slackMCP_0-output-slackMCP-Tool\", \"name\": \"slackMCP\", \"label\": \"Slack MCP Tool\", \"description\": \"MCP Server for the Slack API\", \"type\": \"Tool\"}], \"outputs\": {}, \"selected\": false}, \"width\": 300, \"height\": 378, \"selected\": true, \"positionAbsolute\": {\"x\": 787.0923211007045, \"y\": -546.2111333307942}, \"dragging\": false}, {\"id\": \"confluenceMCP_0\", \"position\": {\"x\": 171.23574911049383, \"y\": -547.9078585426323}, \"type\": \"customNode\", \"data\": {\"id\": \"confluenceMCP_0\", \"label\": \"Confluence MCP\", \"version\": 1, \"name\": \"confluenceMCP\", \"type\": \"Confluence MCP Tool\", \"baseClasses\": [\"Tool\"], \"category\": \"Tools (MCP)\", \"description\": \"MCP server that integrates the Confluence API\", \"inputParams\": [{\"label\": \"Connect Credential\", \"name\": \"credential\", \"type\": \"credential\", \"credentialNames\": [\"confluenceCloudApi\"], \"id\": \"confluenceMCP_0-input-credential-credential\"}, {\"label\": \"Available Actions\", \"name\": \"mcpActions\", \"type\": \"asyncMultiOptions\", \"loadMethod\": \"listActions\", \"refresh\": true, \"id\": \"confluenceMCP_0-input-mcpActions-asyncMultiOptions\"}], \"inputAnchors\": [], \"inputs\": {\"mcpActions\": \"[\\\"create_page\\\",\\\"get_comments\\\",\\\"get_page\\\",\\\"get_spaces\\\",\\\"search_pages\\\",\\\"update_page\\\",\\\"add_comment\\\"]\"}, \"outputAnchors\": [{\"id\": \"confluenceMCP_0-output-confluenceMCP-Tool\", \"name\": \"confluenceMCP\", \"label\": \"Confluence MCP Tool\", \"description\": \"MCP server that integrates the Confluence API\", \"type\": \"Tool\"}], \"outputs\": {}, \"selected\": false}, \"width\": 300, \"height\": 378, \"selected\": false, \"positionAbsolute\": {\"x\": 171.23574911049383, \"y\": -547.9078585426323}, \"dragging\": false}, {\"id\": \"contentfulMCP_0\", \"position\": {\"x\": 1092.3742563625328, \"y\": -550.0752432655785}, \"type\": \"customNode\", \"data\": {\"id\": \"contentfulMCP_0\", \"label\": \"Contentful MCP\", \"version\": 1, \"name\": \"contentfulMCP\", \"type\": \"Contentful MCP Tool\", \"baseClasses\": [\"Tool\"], \"category\": \"Tools (MCP)\", \"description\": \"MCP Server for the Contentful API\", \"inputParams\": [{\"label\": \"Connect Credential\", \"name\": \"credential\", \"type\": \"credential\", \"credentialNames\": [\"contentfulManagementApi\"], \"id\": \"contentfulMCP_0-input-credential-credential\"}, {\"label\": \"Space ID\", \"name\": \"spaceId\", \"type\": \"string\", \"id\": \"contentfulMCP_0-input-spaceId-string\"}, {\"label\": \"Environment ID\", \"name\": \"environmentId\", \"type\": \"string\", \"id\": \"contentfulMCP_0-input-environmentId-string\"}, {\"label\": \"Available Actions\", \"name\": \"mcpActions\", \"type\": \"asyncMultiOptions\", \"loadMethod\": \"listActions\", \"refresh\": true, \"id\": \"contentfulMCP_0-input-mcpActions-asyncMultiOptions\"}], \"inputAnchors\": [], \"inputs\": {\"spaceId\": \"tvgfvvmz5d97\", \"environmentId\": \"master\", \"mcpActions\": \"[\\\"get_content_type\\\",\\\"get_editor_interface\\\",\\\"list_content_types\\\",\\\"search_entries\\\",\\\"get_entry\\\"]\"}, \"outputAnchors\": [{\"id\": \"contentfulMCP_0-output-contentfulMCP-Tool\", \"name\": \"contentfulMCP\", \"label\": \"Contentful MCP Tool\", \"description\": \"MCP Server for the Contentful API\", \"type\": \"Tool\"}], \"outputs\": {}, \"selected\": false}, \"width\": 300, \"height\": 715, \"selected\": false, \"positionAbsolute\": {\"x\": 1092.3742563625328, \"y\": -550.0752432655785}, \"dragging\": false}, {\"id\": \"calculator_0\", \"position\": {\"x\": 1390.7508865547622, \"y\": 177.5880543848166}, \"type\": \"customNode\", \"data\": {\"id\": \"calculator_0\", \"label\": \"Calculator\", \"version\": 1, \"name\": \"calculator\", \"type\": \"Calculator\", \"baseClasses\": [\"Calculator\", \"Tool\", \"StructuredTool\", \"Runnable\"], \"category\": \"Tools\", \"description\": \"Perform calculations on response\", \"inputParams\": [], \"inputAnchors\": [], \"inputs\": {}, \"outputAnchors\": [{\"id\": \"calculator_0-output-calculator-Calculator|Tool|StructuredTool|Runnable\", \"name\": \"calculator\", \"label\": \"Calculator\", \"description\": \"Perform calculations on response\", \"type\": \"Calculator | Tool | StructuredTool | Runnable\"}], \"outputs\": {}, \"selected\": false}, \"width\": 300, \"height\": 149, \"selected\": false, \"positionAbsolute\": {\"x\": 1390.7508865547622, \"y\": 177.5880543848166}, \"dragging\": false}, {\"id\": \"dallePost_0\", \"position\": {\"x\": 1376.879624327908, \"y\": 469.6070227230709}, \"type\": \"customNode\", \"data\": {\"id\": \"dallePost_0\", \"label\": \"Dall-E Post\", \"version\": 1, \"name\": \"dallePost\", \"type\": \"DallePost\", \"baseClasses\": [\"DallePost\", \"Tool\", \"StructuredTool\", \"Runnable\"], \"category\": \"Tools\", \"description\": \"Creates an image using Dall-E\", \"inputParams\": [{\"label\": \"Connect Credential\", \"name\": \"credential\", \"type\": \"credential\", \"credentialNames\": [\"openAIApi\"], \"id\": \"dallePost_0-input-credential-credential\"}, {\"label\": \"Prompt\", \"name\": \"prompt\", \"type\": \"string\", \"description\": \"The prompt that will be used to generate the image. The prompt should be a string.\", \"id\": \"dallePost_0-input-prompt-string\"}, {\"label\": \"Model\", \"name\": \"model\", \"type\": \"string\", \"default\": \"dall-e-2\", \"description\": \"The model to use for generating the image.\", \"id\": \"dallePost_0-input-model-string\"}], \"inputAnchors\": [], \"inputs\": {\"prompt\": \"\", \"model\": \"dall-e-3\"}, \"outputAnchors\": [{\"id\": \"dallePost_0-output-dallePost-DallePost|Tool|StructuredTool|Runnable\", \"name\": \"dallePost\", \"label\": \"DallePost\", \"description\": \"Creates an image using Dall-E\", \"type\": \"DallePost | Tool | StructuredTool | Runnable\"}], \"outputs\": {}, \"selected\": false}, \"width\": 300, \"height\": 479, \"selected\": false, \"positionAbsolute\": {\"x\": 1376.879624327908, \"y\": 469.6070227230709}, \"dragging\": false}, {\"id\": \"currentDateTime_0\", \"position\": {\"x\": 1380.6364245143477, \"y\": 321.50239998842943}, \"type\": \"customNode\", \"data\": {\"id\": \"currentDateTime_0\", \"label\": \"CurrentDateTime\", \"version\": 1, \"name\": \"currentDateTime\", \"type\": \"CurrentDateTime\", \"baseClasses\": [\"CurrentDateTime\", \"Tool\"], \"category\": \"Tools\", \"description\": \"Get todays day, date and time.\", \"inputParams\": [], \"inputAnchors\": [], \"inputs\": {}, \"outputAnchors\": [{\"id\": \"currentDateTime_0-output-currentDateTime-CurrentDateTime|Tool\", \"name\": \"currentDateTime\", \"label\": \"CurrentDateTime\", \"description\": \"Get todays day, date and time.\", \"type\": \"CurrentDateTime | Tool\"}], \"outputs\": {}, \"selected\": false}, \"width\": 300, \"height\": 149, \"selected\": false, \"positionAbsolute\": {\"x\": 1380.6364245143477, \"y\": 321.50239998842943}, \"dragging\": false}, {\"id\": \"jiraMCP_0\", \"position\": {\"x\": 482.616687640399, \"y\": -545.3069968750976}, \"type\": \"customNode\", \"data\": {\"id\": \"jiraMCP_0\", \"label\": \"Jira MCP\", \"version\": 1, \"name\": \"jiraMCP\", \"type\": \"Jira MCP Tool\", \"baseClasses\": [\"Tool\"], \"category\": \"Tools (MCP)\", \"description\": \"MCP server that integrates the Jira API\", \"inputParams\": [{\"label\": \"Connect Credential\", \"name\": \"credential\", \"type\": \"credential\", \"credentialNames\": [\"JiraApi\"], \"id\": \"jiraMCP_0-input-credential-credential\"}, {\"label\": \"Available Actions\", \"name\": \"mcpActions\", \"type\": \"asyncMultiOptions\", \"loadMethod\": \"listActions\", \"refresh\": true, \"id\": \"jiraMCP_0-input-mcpActions-asyncMultiOptions\"}], \"inputAnchors\": [], \"inputs\": {\"mcpActions\": \"[\\\"get_epic_children\\\",\\\"get_issue\\\",\\\"search_issues\\\"]\"}, \"outputAnchors\": [{\"id\": \"jiraMCP_0-output-jiraMCP-Tool\", \"name\": \"jiraMCP\", \"label\": \"Jira MCP Tool\", \"description\": \"MCP server that integrates the Jira API\", \"type\": \"Tool\"}], \"outputs\": {}, \"selected\": false}, \"width\": 300, \"height\": 378, \"selected\": false, \"positionAbsolute\": {\"x\": 482.616687640399, \"y\": -545.3069968750976}, \"dragging\": false}, {\"id\": \"githubMCP_0\", \"position\": {\"x\": 1399.6646233125896, \"y\": -546.7979250770647}, \"type\": \"customNode\", \"data\": {\"id\": \"githubMCP_0\", \"label\": \"Github MCP\", \"version\": 1, \"name\": \"githubMCP\", \"type\": \"Github MCP Tool\", \"baseClasses\": [\"Tool\"], \"category\": \"Tools (MCP)\", \"description\": \"MCP Server for the GitHub API\", \"inputParams\": [{\"label\": \"Connect Credential\", \"name\": \"credential\", \"type\": \"credential\", \"credentialNames\": [\"githubApi\"], \"id\": \"githubMCP_0-input-credential-credential\"}, {\"label\": \"Available Actions\", \"name\": \"mcpActions\", \"type\": \"asyncMultiOptions\", \"loadMethod\": \"listActions\", \"refresh\": true, \"id\": \"githubMCP_0-input-mcpActions-asyncMultiOptions\"}], \"inputAnchors\": [], \"inputs\": {\"mcpActions\": \"[\\\"create_pull_request\\\",\\\"get_file_contents\\\",\\\"get_issue\\\",\\\"list_commits\\\",\\\"search_code\\\",\\\"search_users\\\",\\\"search_repositories\\\"]\"}, \"outputAnchors\": [{\"id\": \"githubMCP_0-output-githubMCP-Tool\", \"name\": \"githubMCP\", \"label\": \"Github MCP Tool\", \"description\": \"MCP Server for the GitHub API\", \"type\": \"Tool\"}], \"outputs\": {}, \"selected\": false}, \"width\": 300, \"height\": 549, \"selected\": false, \"positionAbsolute\": {\"x\": 1399.6646233125896, \"y\": -546.7979250770647}, \"dragging\": false}, {\"id\": \"exaSearch_0\", \"position\": {\"x\": 1710.5959608969545, \"y\": 176.51268650690338}, \"type\": \"customNode\", \"data\": {\"id\": \"exaSearch_0\", \"label\": \"Exa Search\", \"version\": 1.1, \"name\": \"exaSearch\", \"type\": \"ExaSearch\", \"baseClasses\": [\"ExaSearch\", \"Tool\", \"StructuredTool\", \"Runnable\"], \"category\": \"Tools\", \"description\": \"Wrapper around Exa Search API - search engine fully designed for use by LLMs\", \"inputParams\": [{\"label\": \"Connect Credential\", \"name\": \"credential\", \"type\": \"credential\", \"credentialNames\": [\"exaSearchApi\"], \"id\": \"exaSearch_0-input-credential-credential\"}, {\"label\": \"Tool Description\", \"name\": \"description\", \"type\": \"string\", \"description\": \"Description of what the tool does. This is for LLM to determine when to use this tool.\", \"rows\": 4, \"additionalParams\": true, \"default\": \"A wrapper around Exa Search. Input should be an Exa-optimized query. Output is a JSON array of the query results\", \"id\": \"exaSearch_0-input-description-string\"}, {\"label\": \"Num of Results\", \"name\": \"numResults\", \"type\": \"number\", \"optional\": true, \"step\": 1, \"additionalParams\": true, \"description\": \"Number of search results to return. Default 10. Max 10 for basic plans. Up to thousands for custom plans.\", \"id\": \"exaSearch_0-input-numResults-number\"}, {\"label\": \"Search Type\", \"name\": \"type\", \"type\": \"options\", \"options\": [{\"label\": \"keyword\", \"name\": \"keyword\"}, {\"label\": \"neural\", \"name\": \"neural\"}, {\"label\": \"auto\", \"name\": \"auto\", \"description\": \"decides between keyword and neural\"}], \"optional\": true, \"additionalParams\": true, \"id\": \"exaSearch_0-input-type-options\"}, {\"label\": \"Use Auto Prompt\", \"name\": \"useAutoprompt\", \"type\": \"boolean\", \"optional\": true, \"additionalParams\": true, \"description\": \"If true, your query will be converted to a Exa query. Default false.\", \"id\": \"exaSearch_0-input-useAutoprompt-boolean\"}, {\"label\": \"Category (Beta)\", \"name\": \"category\", \"type\": \"options\", \"description\": \"A data category to focus on, with higher comprehensivity and data cleanliness. Categories right now include company, research paper, news, github, tweet, movie, song, personal site, and pdf\", \"options\": [{\"label\": \"company\", \"name\": \"company\"}, {\"label\": \"research paper\", \"name\": \"research paper\"}, {\"label\": \"news\", \"name\": \"news\"}, {\"label\": \"github\", \"name\": \"github\"}, {\"label\": \"tweet\", \"name\": \"tweet\"}, {\"label\": \"movie\", \"name\": \"movie\"}, {\"label\": \"song\", \"name\": \"song\"}, {\"label\": \"pdf\", \"name\": \"pdf\"}, {\"label\": \"personal site\", \"name\": \"personal site\"}, {\"label\": \"linkedin profile\", \"name\": \"linkedin profile\"}, {\"label\": \"financial report\", \"name\": \"financial report\"}], \"optional\": true, \"additionalParams\": true, \"id\": \"exaSearch_0-input-category-options\"}, {\"label\": \"Include Domains\", \"name\": \"includeDomains\", \"type\": \"string\", \"rows\": 4, \"optional\": true, \"additionalParams\": true, \"description\": \"List of domains to include in the search, separated by comma. If specified, results will only come from these domains.\", \"id\": \"exaSearch_0-input-includeDomains-string\"}, {\"label\": \"Exclude Domains\", \"name\": \"excludeDomains\", \"type\": \"string\", \"rows\": 4, \"optional\": true, \"additionalParams\": true, \"description\": \"List of domains to exclude in the search, separated by comma. If specified, results will not include any from these domains.\", \"id\": \"exaSearch_0-input-excludeDomains-string\"}, {\"label\": \"Start Crawl Date\", \"name\": \"startCrawlDate\", \"type\": \"string\", \"optional\": true, \"additionalParams\": true, \"placeholder\": \"2023-01-01T00:00:00.000Z\", \"description\": \"Crawl date refers to the date that Exa discovered a link. Results will include links that were crawled after this date. Must be specified in ISO 8601 format.\", \"id\": \"exaSearch_0-input-startCrawlDate-string\"}, {\"label\": \"End Crawl Date\", \"name\": \"endCrawlDate\", \"type\": \"string\", \"optional\": true, \"additionalParams\": true, \"placeholder\": \"2023-12-31T00:00:00.000Z\", \"description\": \"Crawl date refers to the date that Exa discovered a link. Results will include links that were crawled before this date. Must be specified in ISO 8601 format.\", \"id\": \"exaSearch_0-input-endCrawlDate-string\"}, {\"label\": \"Start Published Date\", \"name\": \"startPublishedDate\", \"type\": \"string\", \"optional\": true, \"additionalParams\": true, \"placeholder\": \"2023-01-01T00:00:00.000Z\", \"description\": \"Only links with a published date after this will be returned. Must be specified in ISO 8601 format.\", \"id\": \"exaSearch_0-input-startPublishedDate-string\"}, {\"label\": \"End Published Date\", \"name\": \"endPublishedDate\", \"type\": \"string\", \"optional\": true, \"additionalParams\": true, \"placeholder\": \"2023-12-31T00:00:00.000Z\", \"description\": \"Only links with a published date before this will be returned. Must be specified in ISO 8601 format.\", \"id\": \"exaSearch_0-input-endPublishedDate-string\"}], \"inputAnchors\": [], \"inputs\": {\"description\": \"A wrapper around Exa Search. Input should be an Exa-optimized query. Output is a JSON array of the query results\", \"numResults\": \"\", \"type\": \"\", \"useAutoprompt\": \"\", \"category\": \"\", \"includeDomains\": \"\", \"excludeDomains\": \"\", \"startCrawlDate\": \"\", \"endCrawlDate\": \"\", \"startPublishedDate\": \"\", \"endPublishedDate\": \"\"}, \"outputAnchors\": [{\"id\": \"exaSearch_0-output-exaSearch-ExaSearch|Tool|StructuredTool|Runnable\", \"name\": \"exaSearch\", \"label\": \"ExaSearch\", \"description\": \"Wrapper around Exa Search API - search engine fully designed for use by LLMs\", \"type\": \"ExaSearch | Tool | StructuredTool | Runnable\"}], \"outputs\": {}, \"selected\": false}, \"width\": 300, \"height\": 334, \"selected\": false, \"positionAbsolute\": {\"x\": 1710.5959608969545, \"y\": 176.51268650690338}, \"dragging\": false}], \"edges\": [{\"source\": \"chatOpenAI_0\", \"sourceHandle\": \"chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable\", \"target\": \"toolAgent_0\", \"targetHandle\": \"toolAgent_0-input-model-BaseChatModel\", \"type\": \"buttonedge\", \"id\": \"chatOpenAI_0-chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable-toolAgent_0-toolAgent_0-input-model-BaseChatModel\"}, {\"source\": \"AAIChatMemory_0\", \"sourceHandle\": \"AAIChatMemory_0-output-AAIChatMemory-AAIChatMemory|BaseChatMemory|BaseMemory\", \"target\": \"toolAgent_0\", \"targetHandle\": \"toolAgent_0-input-memory-BaseChatMemory\", \"type\": \"buttonedge\", \"id\": \"AAIChatMemory_0-AAIChatMemory_0-output-AAIChatMemory-AAIChatMemory|BaseChatMemory|BaseMemory-toolAgent_0-toolAgent_0-input-memory-BaseChatMemory\"}, {\"source\": \"chatPromptTemplate_0\", \"sourceHandle\": \"chatPromptTemplate_0-output-chatPromptTemplate-ChatPromptTemplate|BaseChatPromptTemplate|BasePromptTemplate|Runnable\", \"target\": \"toolAgent_0\", \"targetHandle\": \"toolAgent_0-input-chatPromptTemplate-ChatPromptTemplate\", \"type\": \"buttonedge\", \"id\": \"chatPromptTemplate_0-chatPromptTemplate_0-output-chatPromptTemplate-ChatPromptTemplate|BaseChatPromptTemplate|BasePromptTemplate|Runnable-toolAgent_0-toolAgent_0-input-chatPromptTemplate-ChatPromptTemplate\"}, {\"source\": \"slackMCP_0\", \"sourceHandle\": \"slackMCP_0-output-slackMCP-Tool\", \"target\": \"toolAgent_0\", \"targetHandle\": \"toolAgent_0-input-tools-Tool\", \"type\": \"buttonedge\", \"id\": \"slackMCP_0-slackMCP_0-output-slackMCP-Tool-toolAgent_0-toolAgent_0-input-tools-Tool\"}, {\"source\": \"confluenceMCP_0\", \"sourceHandle\": \"confluenceMCP_0-output-confluenceMCP-Tool\", \"target\": \"toolAgent_0\", \"targetHandle\": \"toolAgent_0-input-tools-Tool\", \"type\": \"buttonedge\", \"id\": \"confluenceMCP_0-confluenceMCP_0-output-confluenceMCP-Tool-toolAgent_0-toolAgent_0-input-tools-Tool\"}, {\"source\": \"contentfulMCP_0\", \"sourceHandle\": \"contentfulMCP_0-output-contentfulMCP-Tool\", \"target\": \"toolAgent_0\", \"targetHandle\": \"toolAgent_0-input-tools-Tool\", \"type\": \"buttonedge\", \"id\": \"contentfulMCP_0-contentfulMCP_0-output-contentfulMCP-Tool-toolAgent_0-toolAgent_0-input-tools-Tool\"}, {\"source\": \"currentDateTime_0\", \"sourceHandle\": \"currentDateTime_0-output-currentDateTime-CurrentDateTime|Tool\", \"target\": \"toolAgent_0\", \"targetHandle\": \"toolAgent_0-input-tools-Tool\", \"type\": \"buttonedge\", \"id\": \"currentDateTime_0-currentDateTime_0-output-currentDateTime-CurrentDateTime|Tool-toolAgent_0-toolAgent_0-input-tools-Tool\"}, {\"source\": \"calculator_0\", \"sourceHandle\": \"calculator_0-output-calculator-Calculator|Tool|StructuredTool|Runnable\", \"target\": \"toolAgent_0\", \"targetHandle\": \"toolAgent_0-input-tools-Tool\", \"type\": \"buttonedge\", \"id\": \"calculator_0-calculator_0-output-calculator-Calculator|Tool|StructuredTool|Runnable-toolAgent_0-toolAgent_0-input-tools-Tool\"}, {\"source\": \"jiraMCP_0\", \"sourceHandle\": \"jiraMCP_0-output-jiraMCP-Tool\", \"target\": \"toolAgent_0\", \"targetHandle\": \"toolAgent_0-input-tools-Tool\", \"type\": \"buttonedge\", \"id\": \"jiraMCP_0-jiraMCP_0-output-jiraMCP-Tool-toolAgent_0-toolAgent_0-input-tools-Tool\"}, {\"source\": \"dallePost_0\", \"sourceHandle\": \"dallePost_0-output-dallePost-DallePost|Tool|StructuredTool|Runnable\", \"target\": \"toolAgent_0\", \"targetHandle\": \"toolAgent_0-input-tools-Tool\", \"type\": \"buttonedge\", \"id\": \"dallePost_0-dallePost_0-output-dallePost-DallePost|Tool|StructuredTool|Runnable-toolAgent_0-toolAgent_0-input-tools-Tool\"}, {\"source\": \"githubMCP_0\", \"sourceHandle\": \"githubMCP_0-output-githubMCP-Tool\", \"target\": \"toolAgent_0\", \"targetHandle\": \"toolAgent_0-input-tools-Tool\", \"type\": \"buttonedge\", \"id\": \"githubMCP_0-githubMCP_0-output-githubMCP-Tool-toolAgent_0-toolAgent_0-input-tools-Tool\"}, {\"source\": \"exaSearch_0\", \"sourceHandle\": \"exaSearch_0-output-exaSearch-ExaSearch|Tool|StructuredTool|Runnable\", \"target\": \"toolAgent_0\", \"targetHandle\": \"toolAgent_0-input-tools-Tool\", \"type\": \"buttonedge\", \"id\": \"exaSearch_0-exaSearch_0-output-exaSearch-ExaSearch|Tool|StructuredTool|Runnable-toolAgent_0-toolAgent_0-input-tools-Tool\"}], \"viewport\": {\"x\": 163.1067038896008, \"y\": 353.18978820127694, \"zoom\": 0.5645653542255069}}",
    "isPublic": false,
    "chatbotConfig": "{\"chatFeedback\":{\"status\":true}}",
    "visibility": ["Private", "AnswerAI"],
    "answersConfig": null,
    "apiConfig": null,
    "analytic": null,
    "speechToText": null,
    "followUpPrompts": null,
    "category": "",
    "type": "CHATFLOW",
    "browserExtConfig": null,
    "parentChatflowId": "27baa2bb-3f51-4fcf-8e83-9ea3c26be95e",
    "userId": "5c4a7d5b-b24f-488c-837b-015d42c2fbf1",
    "organizationId": "9249f747-f8cf-44aa-acc5-94c654902262",
    "templateId": null,
    "currentVersion": 1,
    "s3Location": null,
    "isUserDefault": true,
    "nodes": [
        {
            "id": "toolAgent_0",
            "position": {
                "x": 1015.068806949258,
                "y": 211.01719472204417
            },
            "type": "customNode",
            "data": {
                "id": "toolAgent_0",
                "label": "Tool Agent",
                "version": 2,
                "name": "toolAgent",
                "type": "AgentExecutor",
                "baseClasses": ["AgentExecutor", "BaseChain", "Runnable"],
                "category": "Agents",
                "description": "Agent that uses Function Calling to pick the tools and args to call",
                "inputParams": [
                    {
                        "label": "System Message",
                        "name": "systemMessage",
                        "type": "string",
                        "default": "You are a helpful AI assistant.",
                        "description": "If Chat Prompt Template is provided, this will be ignored",
                        "rows": 4,
                        "optional": true,
                        "additionalParams": true,
                        "id": "toolAgent_0-input-systemMessage-string"
                    },
                    {
                        "label": "Max Iterations",
                        "name": "maxIterations",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "toolAgent_0-input-maxIterations-number"
                    },
                    {
                        "label": "Enable Detailed Streaming",
                        "name": "enableDetailedStreaming",
                        "type": "boolean",
                        "default": false,
                        "description": "Stream detailed intermediate steps during agent execution",
                        "optional": true,
                        "additionalParams": true,
                        "id": "toolAgent_0-input-enableDetailedStreaming-boolean"
                    }
                ],
                "inputAnchors": [
                    {
                        "label": "Tools",
                        "name": "tools",
                        "type": "Tool",
                        "list": true,
                        "id": "toolAgent_0-input-tools-Tool"
                    },
                    {
                        "label": "Memory",
                        "name": "memory",
                        "type": "BaseChatMemory",
                        "id": "toolAgent_0-input-memory-BaseChatMemory"
                    },
                    {
                        "label": "Tool Calling Chat Model",
                        "name": "model",
                        "type": "BaseChatModel",
                        "description": "Only compatible with models that are capable of function calling: ChatOpenAI, ChatMistral, ChatAnthropic, ChatGoogleGenerativeAI, ChatVertexAI, GroqChat",
                        "id": "toolAgent_0-input-model-BaseChatModel"
                    },
                    {
                        "label": "Chat Prompt Template",
                        "name": "chatPromptTemplate",
                        "type": "ChatPromptTemplate",
                        "description": "Override existing prompt with Chat Prompt Template. Human Message must includes {input} variable",
                        "optional": true,
                        "id": "toolAgent_0-input-chatPromptTemplate-ChatPromptTemplate"
                    },
                    {
                        "label": "Input Moderation",
                        "description": "Detect text that could generate harmful output and prevent it from being sent to the language model",
                        "name": "inputModeration",
                        "type": "Moderation",
                        "optional": true,
                        "list": true,
                        "id": "toolAgent_0-input-inputModeration-Moderation"
                    }
                ],
                "inputs": {
                    "tools": [
                        "{{slackMCP_0.data.instance}}",
                        "{{confluenceMCP_0.data.instance}}",
                        "{{contentfulMCP_0.data.instance}}",
                        "{{currentDateTime_0.data.instance}}",
                        "{{calculator_0.data.instance}}",
                        "{{jiraMCP_0.data.instance}}",
                        "{{dallePost_0.data.instance}}",
                        "{{currentDateTime_0.data.instance}}",
                        "{{githubMCP_0.data.instance}}",
                        "{{exaSearch_0.data.instance}}"
                    ],
                    "memory": "{{AAIChatMemory_0.data.instance}}",
                    "model": "{{chatOpenAI_0.data.instance}}",
                    "chatPromptTemplate": "{{chatPromptTemplate_0.data.instance}}",
                    "systemMessage": "You are a helpful AI assistant.",
                    "inputModeration": "",
                    "maxIterations": "",
                    "enableDetailedStreaming": ""
                },
                "outputAnchors": [
                    {
                        "id": "toolAgent_0-output-toolAgent-AgentExecutor|BaseChain|Runnable",
                        "name": "toolAgent",
                        "label": "AgentExecutor",
                        "description": "Agent that uses Function Calling to pick the tools and args to call",
                        "type": "AgentExecutor | BaseChain | Runnable"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 492,
            "positionAbsolute": {
                "x": 1015.068806949258,
                "y": 211.01719472204417
            },
            "selected": false,
            "dragging": false
        },
        {
            "id": "chatOpenAI_0",
            "position": {
                "x": 369.0138347752882,
                "y": 216.36883361560672
            },
            "type": "customNode",
            "data": {
                "id": "chatOpenAI_0",
                "label": "ChatOpenAI",
                "version": 8.2,
                "name": "chatOpenAI",
                "type": "ChatOpenAI",
                "baseClasses": ["ChatOpenAI", "BaseChatModel", "BaseLanguageModel", "Runnable"],
                "tags": ["AAI"],
                "category": "Chat Models",
                "description": "Wrapper around OpenAI large language models that use the Chat endpoint",
                "inputParams": [
                    {
                        "label": "Connect Credential",
                        "name": "credential",
                        "type": "credential",
                        "credentialNames": ["openAIApi"],
                        "id": "chatOpenAI_0-input-credential-credential",
                        "display": true
                    },
                    {
                        "label": "Model Name",
                        "name": "modelName",
                        "type": "asyncOptions",
                        "loadMethod": "listModels",
                        "default": "gpt-4o-mini",
                        "id": "chatOpenAI_0-input-modelName-asyncOptions",
                        "display": true
                    },
                    {
                        "label": "Temperature",
                        "name": "temperature",
                        "type": "number",
                        "step": 0.1,
                        "default": 0.9,
                        "optional": true,
                        "id": "chatOpenAI_0-input-temperature-number",
                        "display": true
                    },
                    {
                        "label": "Streaming",
                        "name": "streaming",
                        "type": "boolean",
                        "default": true,
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-streaming-boolean",
                        "display": true
                    },
                    {
                        "label": "Max Tokens",
                        "name": "maxTokens",
                        "type": "number",
                        "step": 1,
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-maxTokens-number",
                        "display": true
                    },
                    {
                        "label": "Top Probability",
                        "name": "topP",
                        "type": "number",
                        "step": 0.1,
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-topP-number",
                        "display": true
                    },
                    {
                        "label": "Frequency Penalty",
                        "name": "frequencyPenalty",
                        "type": "number",
                        "step": 0.1,
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-frequencyPenalty-number",
                        "display": true
                    },
                    {
                        "label": "Presence Penalty",
                        "name": "presencePenalty",
                        "type": "number",
                        "step": 0.1,
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-presencePenalty-number",
                        "display": true
                    },
                    {
                        "label": "Timeout",
                        "name": "timeout",
                        "type": "number",
                        "step": 1,
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-timeout-number",
                        "display": true
                    },
                    {
                        "label": "Strict Tool Calling",
                        "name": "strictToolCalling",
                        "type": "boolean",
                        "description": "Whether the model supports the `strict` argument when passing in tools. If not specified, the `strict` argument will not be passed to OpenAI.",
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-strictToolCalling-boolean",
                        "display": true
                    },
                    {
                        "label": "Stop Sequence",
                        "name": "stopSequence",
                        "type": "string",
                        "rows": 4,
                        "optional": true,
                        "description": "List of stop words to use when generating. Use comma to separate multiple stop words.",
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-stopSequence-string",
                        "display": true
                    },
                    {
                        "label": "BasePath",
                        "name": "basepath",
                        "type": "string",
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-basepath-string",
                        "display": true
                    },
                    {
                        "label": "Proxy Url",
                        "name": "proxyUrl",
                        "type": "string",
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-proxyUrl-string",
                        "display": true
                    },
                    {
                        "label": "BaseOptions",
                        "name": "baseOptions",
                        "type": "json",
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-baseOptions-json",
                        "display": true
                    },
                    {
                        "label": "Allow Image Uploads",
                        "name": "allowImageUploads",
                        "type": "boolean",
                        "description": "Allow image input. Refer to the <a href=\"https://docs.flowiseai.com/using-flowise/uploads#image\" target=\"_blank\">docs</a> for more details.",
                        "default": false,
                        "optional": true,
                        "id": "chatOpenAI_0-input-allowImageUploads-boolean",
                        "display": true
                    },
                    {
                        "label": "Image Resolution",
                        "description": "This parameter controls the resolution in which the model views the image.",
                        "name": "imageResolution",
                        "type": "options",
                        "options": [
                            {
                                "label": "Low",
                                "name": "low"
                            },
                            {
                                "label": "High",
                                "name": "high"
                            },
                            {
                                "label": "Auto",
                                "name": "auto"
                            }
                        ],
                        "default": "low",
                        "optional": false,
                        "show": {
                            "allowImageUploads": true
                        },
                        "id": "chatOpenAI_0-input-imageResolution-options",
                        "display": false
                    },
                    {
                        "label": "Reasoning Effort",
                        "description": "Constrains effort on reasoning for reasoning models. Only applicable for o1 and o3 models.",
                        "name": "reasoningEffort",
                        "type": "options",
                        "options": [
                            {
                                "label": "Low",
                                "name": "low"
                            },
                            {
                                "label": "Medium",
                                "name": "medium"
                            },
                            {
                                "label": "High",
                                "name": "high"
                            }
                        ],
                        "default": "medium",
                        "optional": false,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-reasoningEffort-options",
                        "display": true
                    }
                ],
                "inputAnchors": [
                    {
                        "label": "Cache",
                        "name": "cache",
                        "type": "BaseCache",
                        "optional": true,
                        "id": "chatOpenAI_0-input-cache-BaseCache",
                        "display": true
                    }
                ],
                "inputs": {
                    "cache": "",
                    "modelName": "gpt-4.1-nano",
                    "temperature": 0.9,
                    "streaming": true,
                    "maxTokens": "",
                    "topP": "",
                    "frequencyPenalty": "",
                    "presencePenalty": "",
                    "timeout": "",
                    "strictToolCalling": "",
                    "stopSequence": "",
                    "basepath": "",
                    "proxyUrl": "",
                    "baseOptions": "",
                    "allowImageUploads": "",
                    "imageResolution": "low",
                    "reasoningEffort": "medium"
                },
                "outputAnchors": [
                    {
                        "id": "chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable",
                        "name": "chatOpenAI",
                        "label": "ChatOpenAI",
                        "description": "Wrapper around OpenAI large language models that use the Chat endpoint",
                        "type": "ChatOpenAI | BaseChatModel | BaseLanguageModel | Runnable"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 676,
            "selected": false,
            "positionAbsolute": {
                "x": 369.0138347752882,
                "y": 216.36883361560672
            },
            "dragging": false
        },
        {
            "id": "chatPromptTemplate_0",
            "position": {
                "x": 693.1881117271712,
                "y": 199.50491141654618
            },
            "type": "customNode",
            "data": {
                "id": "chatPromptTemplate_0",
                "label": "Chat Prompt Template",
                "version": 2,
                "name": "chatPromptTemplate",
                "type": "ChatPromptTemplate",
                "baseClasses": ["ChatPromptTemplate", "BaseChatPromptTemplate", "BasePromptTemplate", "Runnable"],
                "category": "Prompts",
                "description": "Schema to represent a chat prompt",
                "inputParams": [
                    {
                        "label": "System Message",
                        "name": "systemMessagePrompt",
                        "type": "string",
                        "rows": 4,
                        "placeholder": "You are a helpful assistant that translates {input_language} to {output_language}.",
                        "id": "chatPromptTemplate_0-input-systemMessagePrompt-string"
                    },
                    {
                        "label": "Human Message",
                        "name": "humanMessagePrompt",
                        "description": "This prompt will be added at the end of the messages as human message",
                        "type": "string",
                        "rows": 4,
                        "placeholder": "{text}",
                        "id": "chatPromptTemplate_0-input-humanMessagePrompt-string"
                    },
                    {
                        "label": "Format Prompt Values",
                        "name": "promptValues",
                        "type": "json",
                        "optional": true,
                        "acceptVariable": true,
                        "list": true,
                        "id": "chatPromptTemplate_0-input-promptValues-json"
                    },
                    {
                        "label": "Messages History",
                        "name": "messageHistory",
                        "description": "Add messages after System Message. This is useful when you want to provide few shot examples",
                        "type": "tabs",
                        "tabIdentifier": "selectedMessagesTab",
                        "additionalParams": true,
                        "default": "messageHistoryCode",
                        "tabs": [
                            {
                                "label": "Add Messages (Code)",
                                "name": "messageHistoryCode",
                                "type": "code",
                                "hideCodeExecute": true,
                                "codeExample": "const { AIMessage, HumanMessage, ToolMessage } = require('@langchain/core/messages');\n\nreturn [\n    new HumanMessage(\"What is 333382 \ud83e\udd9c 1932?\"),\n    new AIMessage({\n        content: \"\",\n        tool_calls: [\n        {\n            id: \"12345\",\n            name: \"calulator\",\n            args: {\n                number1: 333382,\n                number2: 1932,\n                operation: \"divide\",\n            },\n        },\n        ],\n    }),\n    new ToolMessage({\n        tool_call_id: \"12345\",\n        content: \"The answer is 172.558.\",\n    }),\n    new AIMessage(\"The answer is 172.558.\"),\n]",
                                "optional": true,
                                "additionalParams": true
                            }
                        ],
                        "id": "chatPromptTemplate_0-input-messageHistory-tabs"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "systemMessagePrompt": "You are Chief Sidekick, an autonomous multi-tool agent for the AnswerAgent platform.\n\n\u2e3b\n\n1 \u00b7  Available Tools\n\n(copy exactly the Tool ID string for tool_calls[i].name \u2013 the regex ^[a-zA-Z0-9_-]+$ must pass)\n\nDomain\tTool ID (copy-exactly)\tCore Actions\nTime\tCurrentDateTime\treturn ISO timestamp\nMath\tCalculator\tbasic arithmetic\nWeb\texaSearch\tExa web search\nConfluence\tget_comments, get_page, search_pages, get_spaces\t\nJira\tget_epic_children, get_issue, search_issues\t\nSlack\tslack_list_channels, slack_post_message, slack_reply_to_thread, slack_add_reaction, slack_get_channel_history, slack_get_thread_replies, slack_get_users, slack_get_user_profile\t\nContentful\tlist_content_types, get_content_type, get_editor_interface, search_entries, get_entry\t\nGitHub\tcreate_or_update_file, push_files, get_file_contents, create_branch, list_commits, search_code, search_repositories, search_users, create_repository, fork_repository, create_pull_request, get_pull_request, list_pull_requests, create_pull_request_review, merge_pull_request, update_pull_request_branch, get_pull_request_files, get_pull_request_status, get_pull_request_comments, get_pull_request_reviews, create_issue, list_issues, update_issue, add_issue_comment\t\nImages\tgenerate_image (DALL\u00b7E)\t\n\nRule: the exact string in the Tool ID column is the only legal name for the corresponding function call.\n\n\u2e3b\n\n2 \u00b7  Thinking & Acting Loop (\u201cPlan \u2192 Act \u2192 Answer\u201d)\n\t1.\tPlan quietly\n\t\u2022\trestate the user goal in one sentence;\n\t\u2022\tchoose the minimal set of tools;\n\t\u2022\tdraft each payload.\n\t2.\tAct by calling a tool.\n\t\u2022\tif more data needed, loop Plan \u2192 Act again.\n\t3.\tAnswer once the goal is met.\n\t\u2022\texpose only the final answer (never your private thoughts or raw JSON).\n\n\u2e3b\n\n3 \u00b7  Clarifying Questions\n\nAsk the user only when essential details (repo name, Slack channel, etc.) are missing and no safe default exists.\n\n\u2e3b\n\n4 \u00b7  Tool-specific Critical Rules\n\t\u2022\tPostgreSQL (inside GitHub actions) \u2013 always prefix tables public.<table>.\n\t\u2022\tGitHub \u2013 create branches, never force-push; head = feature branch, base = main.\n\t\u2022\tContentful \u2013 fetch the content-type schema before sending fields; asset flow = upload \u2192 publish \u2192 link \u2192 publish entry.\n\t\u2022\tConfluence \u2013 prefer CQL filters (space, label) if a plain text search fails.\n\t\u2022\tJira \u2013 verify required fields and retrieve transitionId with get_transitions before state changes.\n\t\u2022\tSlack \u2013 if user supplies \u201c#channel\u201d, resolve ID via slack_list_channels; reaction is plain emoji name (no colons).\n\t\u2022\tExaSearch \u2013 cite or link results when used.\n\t\u2022\tImages \u2013 include a short alt-text caption with any generate_image response.\n\n\u2e3b\n\n5 \u00b7  Error Handling\n\t\u2022\tOn 4xx/5xx or schema error \u2192 revise payload & retry once.\n\t\u2022\tIf still failing \u2192 return the error message and suggest next steps.\n\n\u2e3b\n\n6 \u00b7  Privacy & Safety\n\t\u2022\tNever reveal API keys or private repo names unless the user provided them.\n\t\u2022\tConfirm destructive actions (DROP table, delete repo, etc.) with the user.\n\t\u2022\tRefuse or safe-complete any request that violates policy or law.\n\n\u2e3b\n\nFollow this template strictly.\nAlways copy the exact Tool ID string into tool_calls[i].name.\nKeep responses concise and actionable.",
                    "humanMessagePrompt": "The user is on URL: {url}\nUser Input: {input}",
                    "promptValues": "{\"url\":\"The User is not on a URL inside of Slack\",\"input\":\"{{question}}\"}",
                    "messageHistory": "messageHistoryCode"
                },
                "outputAnchors": [
                    {
                        "id": "chatPromptTemplate_0-output-chatPromptTemplate-ChatPromptTemplate|BaseChatPromptTemplate|BasePromptTemplate|Runnable",
                        "name": "chatPromptTemplate",
                        "label": "ChatPromptTemplate",
                        "description": "Schema to represent a chat prompt",
                        "type": "ChatPromptTemplate | BaseChatPromptTemplate | BasePromptTemplate | Runnable"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 748,
            "selected": false,
            "positionAbsolute": {
                "x": 693.1881117271712,
                "y": 199.50491141654618
            },
            "dragging": false
        },
        {
            "id": "AAIChatMemory_0",
            "position": {
                "x": 1017.2481410221046,
                "y": 708.33850484172
            },
            "type": "customNode",
            "data": {
                "id": "AAIChatMemory_0",
                "label": "Answer Agent Chat Memory",
                "version": 1,
                "name": "AAIChatMemory",
                "type": "AAIChatMemory",
                "baseClasses": ["AAIChatMemory", "BaseChatMemory", "BaseMemory"],
                "category": "Memory",
                "description": "Summarizes the conversation and stores the memory in Answer Agents servers",
                "inputParams": [
                    {
                        "label": "Session Id",
                        "name": "sessionId",
                        "type": "string",
                        "description": "If not specified, a random id will be used. Learn <a target=\"_blank\" href=\"https://docs.flowiseai.com/memory/long-term-memory#ui-and-embedded-chat\">more</a>",
                        "default": "",
                        "additionalParams": true,
                        "optional": true,
                        "id": "AAIChatMemory_0-input-sessionId-string"
                    },
                    {
                        "label": "Session Timeouts",
                        "name": "sessionTTL",
                        "type": "number",
                        "description": "Seconds till a session expires. If not specified, the session will never expire.",
                        "additionalParams": true,
                        "optional": true,
                        "id": "AAIChatMemory_0-input-sessionTTL-number"
                    },
                    {
                        "label": "Memory Key",
                        "name": "memoryKey",
                        "type": "string",
                        "default": "chat_history",
                        "additionalParams": true,
                        "id": "AAIChatMemory_0-input-memoryKey-string"
                    },
                    {
                        "label": "Window Size",
                        "name": "windowSize",
                        "type": "number",
                        "description": "Window of size k to surface the last k back-and-forth to use as memory.",
                        "additionalParams": true,
                        "optional": true,
                        "id": "AAIChatMemory_0-input-windowSize-number"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "sessionId": "",
                    "sessionTTL": "",
                    "memoryKey": "chat_history",
                    "windowSize": ""
                },
                "outputAnchors": [
                    {
                        "id": "AAIChatMemory_0-output-AAIChatMemory-AAIChatMemory|BaseChatMemory|BaseMemory",
                        "name": "AAIChatMemory",
                        "label": "AAIChatMemory",
                        "description": "Summarizes the conversation and stores the memory in Answer Agents servers",
                        "type": "AAIChatMemory | BaseChatMemory | BaseMemory"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 259,
            "selected": false,
            "positionAbsolute": {
                "x": 1017.2481410221046,
                "y": 708.33850484172
            },
            "dragging": false
        },
        {
            "id": "slackMCP_0",
            "position": {
                "x": 787.0923211007045,
                "y": -546.2111333307942
            },
            "type": "customNode",
            "data": {
                "id": "slackMCP_0",
                "label": "Slack MCP",
                "version": 1,
                "name": "slackMCP",
                "type": "Slack MCP Tool",
                "baseClasses": ["Tool"],
                "category": "Tools (MCP)",
                "description": "MCP Server for the Slack API",
                "inputParams": [
                    {
                        "label": "Connect Credential",
                        "name": "credential",
                        "type": "credential",
                        "credentialNames": ["slackApi"],
                        "id": "slackMCP_0-input-credential-credential"
                    },
                    {
                        "label": "Available Actions",
                        "name": "mcpActions",
                        "type": "asyncMultiOptions",
                        "loadMethod": "listActions",
                        "refresh": true,
                        "id": "slackMCP_0-input-mcpActions-asyncMultiOptions"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "mcpActions": "[\"slack_get_channel_history\",\"slack_get_thread_replies\",\"slack_get_user_profile\",\"slack_get_users\",\"slack_list_channels\",\"slack_post_message\",\"slack_reply_to_thread\",\"slack_add_reaction\"]"
                },
                "outputAnchors": [
                    {
                        "id": "slackMCP_0-output-slackMCP-Tool",
                        "name": "slackMCP",
                        "label": "Slack MCP Tool",
                        "description": "MCP Server for the Slack API",
                        "type": "Tool"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 378,
            "selected": false,
            "positionAbsolute": {
                "x": 787.0923211007045,
                "y": -546.2111333307942
            },
            "dragging": false
        },
        {
            "id": "confluenceMCP_0",
            "position": {
                "x": 171.23574911049383,
                "y": -547.9078585426323
            },
            "type": "customNode",
            "data": {
                "id": "confluenceMCP_0",
                "label": "Confluence MCP",
                "version": 1,
                "name": "confluenceMCP",
                "type": "Confluence MCP Tool",
                "baseClasses": ["Tool"],
                "category": "Tools (MCP)",
                "description": "MCP server that integrates the Confluence API",
                "inputParams": [
                    {
                        "label": "Connect Credential",
                        "name": "credential",
                        "type": "credential",
                        "credentialNames": ["confluenceCloudApi"],
                        "id": "confluenceMCP_0-input-credential-credential"
                    },
                    {
                        "label": "Available Actions",
                        "name": "mcpActions",
                        "type": "asyncMultiOptions",
                        "loadMethod": "listActions",
                        "refresh": true,
                        "id": "confluenceMCP_0-input-mcpActions-asyncMultiOptions"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "mcpActions": "[\"create_page\",\"get_comments\",\"get_page\",\"get_spaces\",\"search_pages\",\"update_page\",\"add_comment\"]"
                },
                "outputAnchors": [
                    {
                        "id": "confluenceMCP_0-output-confluenceMCP-Tool",
                        "name": "confluenceMCP",
                        "label": "Confluence MCP Tool",
                        "description": "MCP server that integrates the Confluence API",
                        "type": "Tool"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 378,
            "selected": false,
            "positionAbsolute": {
                "x": 171.23574911049383,
                "y": -547.9078585426323
            },
            "dragging": false
        },
        {
            "id": "contentfulMCP_0",
            "position": {
                "x": 1092.3742563625328,
                "y": -550.0752432655785
            },
            "type": "customNode",
            "data": {
                "id": "contentfulMCP_0",
                "label": "Contentful MCP",
                "version": 1,
                "name": "contentfulMCP",
                "type": "Contentful MCP Tool",
                "baseClasses": ["Tool"],
                "category": "Tools (MCP)",
                "description": "MCP Server for the Contentful API",
                "inputParams": [
                    {
                        "label": "Connect Credential",
                        "name": "credential",
                        "type": "credential",
                        "credentialNames": ["contentfulManagementApi"],
                        "id": "contentfulMCP_0-input-credential-credential"
                    },
                    {
                        "label": "Space ID",
                        "name": "spaceId",
                        "type": "string",
                        "id": "contentfulMCP_0-input-spaceId-string"
                    },
                    {
                        "label": "Environment ID",
                        "name": "environmentId",
                        "type": "string",
                        "id": "contentfulMCP_0-input-environmentId-string"
                    },
                    {
                        "label": "Available Actions",
                        "name": "mcpActions",
                        "type": "asyncMultiOptions",
                        "loadMethod": "listActions",
                        "refresh": true,
                        "id": "contentfulMCP_0-input-mcpActions-asyncMultiOptions"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "spaceId": "tvgfvvmz5d97",
                    "environmentId": "master",
                    "mcpActions": "[\"get_content_type\",\"get_editor_interface\",\"list_content_types\",\"search_entries\",\"get_entry\"]"
                },
                "outputAnchors": [
                    {
                        "id": "contentfulMCP_0-output-contentfulMCP-Tool",
                        "name": "contentfulMCP",
                        "label": "Contentful MCP Tool",
                        "description": "MCP Server for the Contentful API",
                        "type": "Tool"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 715,
            "selected": false,
            "positionAbsolute": {
                "x": 1092.3742563625328,
                "y": -550.0752432655785
            },
            "dragging": false
        },
        {
            "id": "calculator_0",
            "position": {
                "x": 1390.7508865547622,
                "y": 177.5880543848166
            },
            "type": "customNode",
            "data": {
                "id": "calculator_0",
                "label": "Calculator",
                "version": 1,
                "name": "calculator",
                "type": "Calculator",
                "baseClasses": ["Calculator", "Tool", "StructuredTool", "Runnable"],
                "category": "Tools",
                "description": "Perform calculations on response",
                "inputParams": [],
                "inputAnchors": [],
                "inputs": {},
                "outputAnchors": [
                    {
                        "id": "calculator_0-output-calculator-Calculator|Tool|StructuredTool|Runnable",
                        "name": "calculator",
                        "label": "Calculator",
                        "description": "Perform calculations on response",
                        "type": "Calculator | Tool | StructuredTool | Runnable"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 149,
            "selected": false,
            "positionAbsolute": {
                "x": 1390.7508865547622,
                "y": 177.5880543848166
            },
            "dragging": false
        },
        {
            "id": "dallePost_0",
            "position": {
                "x": 1376.879624327908,
                "y": 469.6070227230709
            },
            "type": "customNode",
            "data": {
                "id": "dallePost_0",
                "label": "Dall-E Post",
                "version": 1,
                "name": "dallePost",
                "type": "DallePost",
                "baseClasses": ["DallePost", "Tool", "StructuredTool", "Runnable"],
                "category": "Tools",
                "description": "Creates an image using Dall-E",
                "inputParams": [
                    {
                        "label": "Connect Credential",
                        "name": "credential",
                        "type": "credential",
                        "credentialNames": ["openAIApi"],
                        "id": "dallePost_0-input-credential-credential"
                    },
                    {
                        "label": "Prompt",
                        "name": "prompt",
                        "type": "string",
                        "description": "The prompt that will be used to generate the image. The prompt should be a string.",
                        "id": "dallePost_0-input-prompt-string"
                    },
                    {
                        "label": "Model",
                        "name": "model",
                        "type": "string",
                        "default": "dall-e-2",
                        "description": "The model to use for generating the image.",
                        "id": "dallePost_0-input-model-string"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "prompt": "",
                    "model": "dall-e-3"
                },
                "outputAnchors": [
                    {
                        "id": "dallePost_0-output-dallePost-DallePost|Tool|StructuredTool|Runnable",
                        "name": "dallePost",
                        "label": "DallePost",
                        "description": "Creates an image using Dall-E",
                        "type": "DallePost | Tool | StructuredTool | Runnable"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 479,
            "selected": false,
            "positionAbsolute": {
                "x": 1376.879624327908,
                "y": 469.6070227230709
            },
            "dragging": false
        },
        {
            "id": "currentDateTime_0",
            "position": {
                "x": 1380.6364245143477,
                "y": 321.50239998842943
            },
            "type": "customNode",
            "data": {
                "id": "currentDateTime_0",
                "label": "CurrentDateTime",
                "version": 1,
                "name": "currentDateTime",
                "type": "CurrentDateTime",
                "baseClasses": ["CurrentDateTime", "Tool"],
                "category": "Tools",
                "description": "Get todays day, date and time.",
                "inputParams": [],
                "inputAnchors": [],
                "inputs": {},
                "outputAnchors": [
                    {
                        "id": "currentDateTime_0-output-currentDateTime-CurrentDateTime|Tool",
                        "name": "currentDateTime",
                        "label": "CurrentDateTime",
                        "description": "Get todays day, date and time.",
                        "type": "CurrentDateTime | Tool"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 149,
            "selected": false,
            "positionAbsolute": {
                "x": 1380.6364245143477,
                "y": 321.50239998842943
            },
            "dragging": false
        },
        {
            "id": "jiraMCP_0",
            "position": {
                "x": 482.616687640399,
                "y": -545.3069968750976
            },
            "type": "customNode",
            "data": {
                "id": "jiraMCP_0",
                "label": "Jira MCP",
                "version": 1,
                "name": "jiraMCP",
                "type": "Jira MCP Tool",
                "baseClasses": ["Tool"],
                "category": "Tools (MCP)",
                "description": "MCP server that integrates the Jira API",
                "inputParams": [
                    {
                        "label": "Connect Credential",
                        "name": "credential",
                        "type": "credential",
                        "credentialNames": ["JiraApi"],
                        "id": "jiraMCP_0-input-credential-credential"
                    },
                    {
                        "label": "Available Actions",
                        "name": "mcpActions",
                        "type": "asyncMultiOptions",
                        "loadMethod": "listActions",
                        "refresh": true,
                        "id": "jiraMCP_0-input-mcpActions-asyncMultiOptions"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "mcpActions": "[\"get_epic_children\",\"get_issue\",\"search_issues\"]"
                },
                "outputAnchors": [
                    {
                        "id": "jiraMCP_0-output-jiraMCP-Tool",
                        "name": "jiraMCP",
                        "label": "Jira MCP Tool",
                        "description": "MCP server that integrates the Jira API",
                        "type": "Tool"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 378,
            "selected": false,
            "positionAbsolute": {
                "x": 482.616687640399,
                "y": -545.3069968750976
            },
            "dragging": false
        },
        {
            "id": "githubMCP_0",
            "position": {
                "x": 1399.6646233125896,
                "y": -546.7979250770647
            },
            "type": "customNode",
            "data": {
                "id": "githubMCP_0",
                "label": "Github MCP",
                "version": 1,
                "name": "githubMCP",
                "type": "Github MCP Tool",
                "baseClasses": ["Tool"],
                "category": "Tools (MCP)",
                "description": "MCP Server for the GitHub API",
                "inputParams": [
                    {
                        "label": "Connect Credential",
                        "name": "credential",
                        "type": "credential",
                        "credentialNames": ["githubApi"],
                        "id": "githubMCP_0-input-credential-credential"
                    },
                    {
                        "label": "Available Actions",
                        "name": "mcpActions",
                        "type": "asyncMultiOptions",
                        "loadMethod": "listActions",
                        "refresh": true,
                        "id": "githubMCP_0-input-mcpActions-asyncMultiOptions"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "mcpActions": "[\"create_pull_request\",\"get_file_contents\",\"get_issue\",\"list_commits\",\"search_code\",\"search_users\",\"search_repositories\"]"
                },
                "outputAnchors": [
                    {
                        "id": "githubMCP_0-output-githubMCP-Tool",
                        "name": "githubMCP",
                        "label": "Github MCP Tool",
                        "description": "MCP Server for the GitHub API",
                        "type": "Tool"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 549,
            "selected": false,
            "positionAbsolute": {
                "x": 1399.6646233125896,
                "y": -546.7979250770647
            },
            "dragging": false
        },
        {
            "id": "exaSearch_0",
            "position": {
                "x": 1710.5959608969545,
                "y": 176.51268650690338
            },
            "type": "customNode",
            "data": {
                "id": "exaSearch_0",
                "label": "Exa Search",
                "version": 1.1,
                "name": "exaSearch",
                "type": "ExaSearch",
                "baseClasses": ["ExaSearch", "Tool", "StructuredTool", "Runnable"],
                "category": "Tools",
                "description": "Wrapper around Exa Search API - search engine fully designed for use by LLMs",
                "inputParams": [
                    {
                        "label": "Connect Credential",
                        "name": "credential",
                        "type": "credential",
                        "credentialNames": ["exaSearchApi"],
                        "id": "exaSearch_0-input-credential-credential"
                    },
                    {
                        "label": "Tool Description",
                        "name": "description",
                        "type": "string",
                        "description": "Description of what the tool does. This is for LLM to determine when to use this tool.",
                        "rows": 4,
                        "additionalParams": true,
                        "default": "A wrapper around Exa Search. Input should be an Exa-optimized query. Output is a JSON array of the query results",
                        "id": "exaSearch_0-input-description-string"
                    },
                    {
                        "label": "Num of Results",
                        "name": "numResults",
                        "type": "number",
                        "optional": true,
                        "step": 1,
                        "additionalParams": true,
                        "description": "Number of search results to return. Default 10. Max 10 for basic plans. Up to thousands for custom plans.",
                        "id": "exaSearch_0-input-numResults-number"
                    },
                    {
                        "label": "Search Type",
                        "name": "type",
                        "type": "options",
                        "options": [
                            {
                                "label": "keyword",
                                "name": "keyword"
                            },
                            {
                                "label": "neural",
                                "name": "neural"
                            },
                            {
                                "label": "auto",
                                "name": "auto",
                                "description": "decides between keyword and neural"
                            }
                        ],
                        "optional": true,
                        "additionalParams": true,
                        "id": "exaSearch_0-input-type-options"
                    },
                    {
                        "label": "Use Auto Prompt",
                        "name": "useAutoprompt",
                        "type": "boolean",
                        "optional": true,
                        "additionalParams": true,
                        "description": "If true, your query will be converted to a Exa query. Default false.",
                        "id": "exaSearch_0-input-useAutoprompt-boolean"
                    },
                    {
                        "label": "Category (Beta)",
                        "name": "category",
                        "type": "options",
                        "description": "A data category to focus on, with higher comprehensivity and data cleanliness. Categories right now include company, research paper, news, github, tweet, movie, song, personal site, and pdf",
                        "options": [
                            {
                                "label": "company",
                                "name": "company"
                            },
                            {
                                "label": "research paper",
                                "name": "research paper"
                            },
                            {
                                "label": "news",
                                "name": "news"
                            },
                            {
                                "label": "github",
                                "name": "github"
                            },
                            {
                                "label": "tweet",
                                "name": "tweet"
                            },
                            {
                                "label": "movie",
                                "name": "movie"
                            },
                            {
                                "label": "song",
                                "name": "song"
                            },
                            {
                                "label": "pdf",
                                "name": "pdf"
                            },
                            {
                                "label": "personal site",
                                "name": "personal site"
                            },
                            {
                                "label": "linkedin profile",
                                "name": "linkedin profile"
                            },
                            {
                                "label": "financial report",
                                "name": "financial report"
                            }
                        ],
                        "optional": true,
                        "additionalParams": true,
                        "id": "exaSearch_0-input-category-options"
                    },
                    {
                        "label": "Include Domains",
                        "name": "includeDomains",
                        "type": "string",
                        "rows": 4,
                        "optional": true,
                        "additionalParams": true,
                        "description": "List of domains to include in the search, separated by comma. If specified, results will only come from these domains.",
                        "id": "exaSearch_0-input-includeDomains-string"
                    },
                    {
                        "label": "Exclude Domains",
                        "name": "excludeDomains",
                        "type": "string",
                        "rows": 4,
                        "optional": true,
                        "additionalParams": true,
                        "description": "List of domains to exclude in the search, separated by comma. If specified, results will not include any from these domains.",
                        "id": "exaSearch_0-input-excludeDomains-string"
                    },
                    {
                        "label": "Start Crawl Date",
                        "name": "startCrawlDate",
                        "type": "string",
                        "optional": true,
                        "additionalParams": true,
                        "placeholder": "2023-01-01T00:00:00.000Z",
                        "description": "Crawl date refers to the date that Exa discovered a link. Results will include links that were crawled after this date. Must be specified in ISO 8601 format.",
                        "id": "exaSearch_0-input-startCrawlDate-string"
                    },
                    {
                        "label": "End Crawl Date",
                        "name": "endCrawlDate",
                        "type": "string",
                        "optional": true,
                        "additionalParams": true,
                        "placeholder": "2023-12-31T00:00:00.000Z",
                        "description": "Crawl date refers to the date that Exa discovered a link. Results will include links that were crawled before this date. Must be specified in ISO 8601 format.",
                        "id": "exaSearch_0-input-endCrawlDate-string"
                    },
                    {
                        "label": "Start Published Date",
                        "name": "startPublishedDate",
                        "type": "string",
                        "optional": true,
                        "additionalParams": true,
                        "placeholder": "2023-01-01T00:00:00.000Z",
                        "description": "Only links with a published date after this will be returned. Must be specified in ISO 8601 format.",
                        "id": "exaSearch_0-input-startPublishedDate-string"
                    },
                    {
                        "label": "End Published Date",
                        "name": "endPublishedDate",
                        "type": "string",
                        "optional": true,
                        "additionalParams": true,
                        "placeholder": "2023-12-31T00:00:00.000Z",
                        "description": "Only links with a published date before this will be returned. Must be specified in ISO 8601 format.",
                        "id": "exaSearch_0-input-endPublishedDate-string"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "description": "A wrapper around Exa Search. Input should be an Exa-optimized query. Output is a JSON array of the query results",
                    "numResults": "",
                    "type": "",
                    "useAutoprompt": "",
                    "category": "",
                    "includeDomains": "",
                    "excludeDomains": "",
                    "startCrawlDate": "",
                    "endCrawlDate": "",
                    "startPublishedDate": "",
                    "endPublishedDate": ""
                },
                "outputAnchors": [
                    {
                        "id": "exaSearch_0-output-exaSearch-ExaSearch|Tool|StructuredTool|Runnable",
                        "name": "exaSearch",
                        "label": "ExaSearch",
                        "description": "Wrapper around Exa Search API - search engine fully designed for use by LLMs",
                        "type": "ExaSearch | Tool | StructuredTool | Runnable"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 334,
            "selected": false,
            "positionAbsolute": {
                "x": 1710.5959608969545,
                "y": 176.51268650690338
            },
            "dragging": false
        }
    ],
    "edges": [
        {
            "source": "chatOpenAI_0",
            "sourceHandle": "chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable",
            "target": "toolAgent_0",
            "targetHandle": "toolAgent_0-input-model-BaseChatModel",
            "type": "buttonedge",
            "id": "chatOpenAI_0-chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable-toolAgent_0-toolAgent_0-input-model-BaseChatModel"
        },
        {
            "source": "AAIChatMemory_0",
            "sourceHandle": "AAIChatMemory_0-output-AAIChatMemory-AAIChatMemory|BaseChatMemory|BaseMemory",
            "target": "toolAgent_0",
            "targetHandle": "toolAgent_0-input-memory-BaseChatMemory",
            "type": "buttonedge",
            "id": "AAIChatMemory_0-AAIChatMemory_0-output-AAIChatMemory-AAIChatMemory|BaseChatMemory|BaseMemory-toolAgent_0-toolAgent_0-input-memory-BaseChatMemory"
        },
        {
            "source": "chatPromptTemplate_0",
            "sourceHandle": "chatPromptTemplate_0-output-chatPromptTemplate-ChatPromptTemplate|BaseChatPromptTemplate|BasePromptTemplate|Runnable",
            "target": "toolAgent_0",
            "targetHandle": "toolAgent_0-input-chatPromptTemplate-ChatPromptTemplate",
            "type": "buttonedge",
            "id": "chatPromptTemplate_0-chatPromptTemplate_0-output-chatPromptTemplate-ChatPromptTemplate|BaseChatPromptTemplate|BasePromptTemplate|Runnable-toolAgent_0-toolAgent_0-input-chatPromptTemplate-ChatPromptTemplate"
        },
        {
            "source": "slackMCP_0",
            "sourceHandle": "slackMCP_0-output-slackMCP-Tool",
            "target": "toolAgent_0",
            "targetHandle": "toolAgent_0-input-tools-Tool",
            "type": "buttonedge",
            "id": "slackMCP_0-slackMCP_0-output-slackMCP-Tool-toolAgent_0-toolAgent_0-input-tools-Tool"
        },
        {
            "source": "confluenceMCP_0",
            "sourceHandle": "confluenceMCP_0-output-confluenceMCP-Tool",
            "target": "toolAgent_0",
            "targetHandle": "toolAgent_0-input-tools-Tool",
            "type": "buttonedge",
            "id": "confluenceMCP_0-confluenceMCP_0-output-confluenceMCP-Tool-toolAgent_0-toolAgent_0-input-tools-Tool"
        },
        {
            "source": "contentfulMCP_0",
            "sourceHandle": "contentfulMCP_0-output-contentfulMCP-Tool",
            "target": "toolAgent_0",
            "targetHandle": "toolAgent_0-input-tools-Tool",
            "type": "buttonedge",
            "id": "contentfulMCP_0-contentfulMCP_0-output-contentfulMCP-Tool-toolAgent_0-toolAgent_0-input-tools-Tool"
        },
        {
            "source": "currentDateTime_0",
            "sourceHandle": "currentDateTime_0-output-currentDateTime-CurrentDateTime|Tool",
            "target": "toolAgent_0",
            "targetHandle": "toolAgent_0-input-tools-Tool",
            "type": "buttonedge",
            "id": "currentDateTime_0-currentDateTime_0-output-currentDateTime-CurrentDateTime|Tool-toolAgent_0-toolAgent_0-input-tools-Tool"
        },
        {
            "source": "calculator_0",
            "sourceHandle": "calculator_0-output-calculator-Calculator|Tool|StructuredTool|Runnable",
            "target": "toolAgent_0",
            "targetHandle": "toolAgent_0-input-tools-Tool",
            "type": "buttonedge",
            "id": "calculator_0-calculator_0-output-calculator-Calculator|Tool|StructuredTool|Runnable-toolAgent_0-toolAgent_0-input-tools-Tool"
        },
        {
            "source": "jiraMCP_0",
            "sourceHandle": "jiraMCP_0-output-jiraMCP-Tool",
            "target": "toolAgent_0",
            "targetHandle": "toolAgent_0-input-tools-Tool",
            "type": "buttonedge",
            "id": "jiraMCP_0-jiraMCP_0-output-jiraMCP-Tool-toolAgent_0-toolAgent_0-input-tools-Tool"
        },
        {
            "source": "dallePost_0",
            "sourceHandle": "dallePost_0-output-dallePost-DallePost|Tool|StructuredTool|Runnable",
            "target": "toolAgent_0",
            "targetHandle": "toolAgent_0-input-tools-Tool",
            "type": "buttonedge",
            "id": "dallePost_0-dallePost_0-output-dallePost-DallePost|Tool|StructuredTool|Runnable-toolAgent_0-toolAgent_0-input-tools-Tool"
        },
        {
            "source": "githubMCP_0",
            "sourceHandle": "githubMCP_0-output-githubMCP-Tool",
            "target": "toolAgent_0",
            "targetHandle": "toolAgent_0-input-tools-Tool",
            "type": "buttonedge",
            "id": "githubMCP_0-githubMCP_0-output-githubMCP-Tool-toolAgent_0-toolAgent_0-input-tools-Tool"
        },
        {
            "source": "exaSearch_0",
            "sourceHandle": "exaSearch_0-output-exaSearch-ExaSearch|Tool|StructuredTool|Runnable",
            "target": "toolAgent_0",
            "targetHandle": "toolAgent_0-input-tools-Tool",
            "type": "buttonedge",
            "id": "exaSearch_0-exaSearch_0-output-exaSearch-ExaSearch|Tool|StructuredTool|Runnable-toolAgent_0-toolAgent_0-input-tools-Tool"
        }
    ]
}
